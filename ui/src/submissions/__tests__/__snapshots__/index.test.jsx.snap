// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Submissions renders initial state 1`] = `
<Fragment>
  <DocumentHead
    title="Submit"
  />
  <div
    className="w-100"
  >
    <SafeSwitch>
      <Redirect
        exact={true}
        from="/submissions"
        to="/submissions/authors"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/authors"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/authors/:id"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/literature"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/jobs"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/jobs/:id"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/conferences"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/seminars"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/seminars/:id"
      />
      <Connect(PrivateRoute)
        authorizedRoles={
          Immutable.List [
            "superuser",
            "cataloger",
          ]
        }
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/institutions"
      />
      <Connect(PrivateRoute)
        authorizedRoles={
          Immutable.List [
            "superuser",
            "cataloger",
          ]
        }
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/experiments"
      />
      <Connect(PrivateRoute)
        authorizedRoles={
          Immutable.List [
            "superuser",
            "cataloger",
          ]
        }
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/journals"
      />
      <Redirect
        exact={true}
        from="/submissions/authors/new/success"
        to="/submissions/success"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/submissions/authors/:id/success"
      />
      <Redirect
        exact={true}
        from="/submissions/literature/new/success"
        to="/submissions/success"
      />
      <Redirect
        exact={true}
        from="/submissions/jobs/new/success"
        to="/submissions/success"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/submissions/jobs/:id/success"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/conferences/new/success"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/seminars/:id/success"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        exact={true}
        path="/submissions/seminars/new/success"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/submissions/success"
      />
    </SafeSwitch>
  </div>
</Fragment>
`;
