// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssignAction renders 1`] = `
<UserActionWrapper>
  <DropdownMenu
    disabled={false}
    title={
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        placement="top"
        title={null}
      >
        <Button
          data-test-id="btn-claim"
        >
          <IconText
            icon={<ForwardRef(FileDoneOutlined) />}
            text="claim"
          />
        </Button>
      </Tooltip>
    }
  >
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-self"
        key="assign-self"
        onClick={[Function]}
      >
        This is my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is not my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="unassign"
        key="unassign"
        onClick={[Function]}
      >
        This is not my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="Assign to another author"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-another"
        key="assign-another"
        onClick={[Function]}
      >
        Assign to another author
      </MenuItem>
    </EventTracker>
  </DropdownMenu>
</UserActionWrapper>
`;

exports[`AssignAction renders disabled 1`] = `
<UserActionWrapper>
  <DropdownMenu
    disabled={true}
    title={
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        placement="top"
        title="Please select the papers you want to claim or remove from the profile."
      >
        <Button
          data-test-id="btn-claim"
        >
          <IconText
            icon={<ForwardRef(FileDoneOutlined) />}
            text="claim"
          />
        </Button>
      </Tooltip>
    }
  >
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-self"
        key="assign-self"
        onClick={[Function]}
      >
        This is my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is not my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="unassign"
        key="unassign"
        onClick={[Function]}
      >
        This is not my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="Assign to another author"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-another"
        key="assign-another"
        onClick={[Function]}
      >
        Assign to another author
      </MenuItem>
    </EventTracker>
  </DropdownMenu>
</UserActionWrapper>
`;

exports[`AssignAction renders plural form if numberOfSelected is more than 1 1`] = `
<UserActionWrapper>
  <DropdownMenu
    disabled={false}
    title={
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        placement="top"
        title={null}
      >
        <Button
          data-test-id="btn-claim"
        >
          <IconText
            icon={<ForwardRef(FileDoneOutlined) />}
            text="claim"
          />
        </Button>
      </Tooltip>
    }
  >
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-self"
        key="assign-self"
        onClick={[Function]}
      >
        These are my papers
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is not my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="unassign"
        key="unassign"
        onClick={[Function]}
      >
        These are not my papers
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="Assign to another author"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-another"
        key="assign-another"
        onClick={[Function]}
      >
        Assign to another author
      </MenuItem>
    </EventTracker>
  </DropdownMenu>
</UserActionWrapper>
`;

exports[`AssignAction renders singular form if numberOfSelected is 1 1`] = `
<UserActionWrapper>
  <DropdownMenu
    disabled={false}
    title={
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        placement="top"
        title={null}
      >
        <Button
          data-test-id="btn-claim"
        >
          <IconText
            icon={<ForwardRef(FileDoneOutlined) />}
            text="claim"
          />
        </Button>
      </Tooltip>
    }
  >
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-self"
        key="assign-self"
        onClick={[Function]}
      >
        This is my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="This is not my paper"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="unassign"
        key="unassign"
        onClick={[Function]}
      >
        This is not my paper
      </MenuItem>
    </EventTracker>
    <EventTracker
      eventAction="Claim"
      eventCategory="Author detail"
      eventId="Assign to another author"
      eventPropName="onClick"
      extractEventArgsToForward={null}
    >
      <MenuItem
        data-test-id="assign-another"
        key="assign-another"
        onClick={[Function]}
      >
        Assign to another author
      </MenuItem>
    </EventTracker>
  </DropdownMenu>
</UserActionWrapper>
`;
