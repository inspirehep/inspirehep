// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorEmailsAction renders multiple current emails in a dropdown 1`] = `
<UserActionWrapper>
  <DropdownMenu
    disabled={false}
    items={
      Immutable.List [
        Object {
          "key": "dude@email.cern",
          "label": <span>
            <EventTracker
              eventAction="Mail"
              eventCategory="Author detail"
              eventId="Contact author"
              eventPropName="onClick"
              extractEventArgsToForward={null}
            >
              <LinkWithTargetBlank
                as="a"
                href="mailto:dude@email.cern"
              >
                dude@email.cern
              </LinkWithTargetBlank>
            </EventTracker>
          </span>,
        },
        Object {
          "key": "other-dude@email.cern",
          "label": <span>
            <EventTracker
              eventAction="Mail"
              eventCategory="Author detail"
              eventId="Contact author"
              eventPropName="onClick"
              extractEventArgsToForward={null}
            >
              <LinkWithTargetBlank
                as="a"
                href="mailto:other-dude@email.cern"
              >
                other-dude@email.cern
              </LinkWithTargetBlank>
            </EventTracker>
          </span>,
        },
      ]
    }
    title={
      <Button>
        <Tooltip
          title="Contact author"
        >
          <MailOutlined />
        </Tooltip>
      </Button>
    }
  />
</UserActionWrapper>
`;

exports[`AuthorEmailsAction renders single email 1`] = `
<UserActionWrapper>
  <EventTracker
    eventAction="Mail"
    eventCategory="Author detail"
    eventId="Contact author"
    eventPropName="onClick"
    extractEventArgsToForward={null}
  >
    <LinkWithTargetBlank
      as="a"
      href="mailto:dude@email.cern"
    >
      <Tooltip
        title="Contact author"
      >
        <MailOutlined />
      </Tooltip>
    </LinkWithTargetBlank>
  </EventTracker>
</UserActionWrapper>
`;
