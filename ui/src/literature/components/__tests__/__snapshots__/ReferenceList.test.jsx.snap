// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferenceList does not render the list if total 0 1`] = `
<ContentBox
  className="__ReferenceList__"
  leftActions={null}
  loading={false}
  rightActions={null}
  subTitle={null}
  title={null}
>
  <LoadingOrChildren
    loading={false}
  >
    <ErrorAlertOrChildren
      error={null}
    >
      <EmptyOrChildren
        data={
          Immutable.List [
            Immutable.Map {
              "titles": Immutable.List [
                Immutable.Map {
                  "title": "Reference 1",
                },
              ],
            },
          ]
        }
        title="0 References"
      />
    </ErrorAlertOrChildren>
  </LoadingOrChildren>
</ContentBox>
`;

exports[`ReferenceList renders items with (page * index) key if title is absent 1`] = `
<ContentBox
  className="__ReferenceList__"
  leftActions={null}
  loading={false}
  rightActions={null}
  subTitle={null}
  title={null}
>
  <LoadingOrChildren
    loading={false}
  >
    <ErrorAlertOrChildren
      error={null}
    >
      <EmptyOrChildren
        data={
          Immutable.List [
            Immutable.Map {
              "publication_info": Immutable.List [
                Immutable.Map {
                  "journal_title": "Journal 1",
                },
              ],
            },
            Immutable.Map {
              "authors": Immutable.List [
                Immutable.Map {
                  "full_name": "Author 2",
                },
              ],
            },
          ]
        }
        title="0 References"
      >
        <ListWithPagination
          loading={false}
          onPageChange={[Function]}
          onSizeChange={[Function]}
          page={1}
          pageItems={
            Immutable.List [
              Immutable.Map {
                "publication_info": Immutable.List [
                  Immutable.Map {
                    "journal_title": "Journal 1",
                  },
                ],
              },
              Immutable.Map {
                "authors": Immutable.List [
                  Immutable.Map {
                    "full_name": "Author 2",
                  },
                ],
              },
            ]
          }
          pageSize={25}
          renderItem={[Function]}
          title={null}
          total={1}
        />
      </EmptyOrChildren>
    </ErrorAlertOrChildren>
  </LoadingOrChildren>
</ContentBox>
`;

exports[`ReferenceList renders with error 1`] = `
<ContentBox
  className="__ReferenceList__"
  leftActions={null}
  loading={false}
  rightActions={null}
  subTitle={null}
  title={null}
>
  <LoadingOrChildren
    loading={false}
  >
    <ErrorAlertOrChildren
      error={
        Immutable.Map {
          "message": "error",
        }
      }
    >
      <EmptyOrChildren
        data={Immutable.List []}
        title="0 References"
      />
    </ErrorAlertOrChildren>
  </LoadingOrChildren>
</ContentBox>
`;

exports[`ReferenceList renders with references 1`] = `
<ContentBox
  className="__ReferenceList__"
  leftActions={null}
  loading={false}
  rightActions={null}
  subTitle={null}
  title={null}
>
  <LoadingOrChildren
    loading={false}
  >
    <ErrorAlertOrChildren
      error={null}
    >
      <EmptyOrChildren
        data={
          Immutable.List [
            Immutable.Map {
              "titles": Immutable.List [
                Immutable.Map {
                  "title": "Reference 1",
                },
              ],
            },
            Immutable.Map {
              "titles": Immutable.List [
                Immutable.Map {
                  "title": "Reference 2",
                },
              ],
            },
          ]
        }
        title="0 References"
      >
        <ListWithPagination
          loading={false}
          onPageChange={[Function]}
          onSizeChange={[Function]}
          page={1}
          pageItems={
            Immutable.List [
              Immutable.Map {
                "titles": Immutable.List [
                  Immutable.Map {
                    "title": "Reference 1",
                  },
                ],
              },
              Immutable.Map {
                "titles": Immutable.List [
                  Immutable.Map {
                    "title": "Reference 2",
                  },
                ],
              },
            ]
          }
          pageSize={25}
          renderItem={[Function]}
          title={null}
          total={1}
        />
      </EmptyOrChildren>
    </ErrorAlertOrChildren>
  </LoadingOrChildren>
</ContentBox>
`;
