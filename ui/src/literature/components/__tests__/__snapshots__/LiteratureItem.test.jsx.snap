// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LiteratureItem does not arxiv pdf download action if there is no eprint value 1`] = `
<ResultItem
  leftActions={
    <React.Fragment>
      <Connect(CiteModalAction)
        recordId={12345}
      />
    </React.Fragment>
  }
  rightActions={
    <React.Fragment>
      <ListItemAction>
        <EventTracker
          eventId="Citations:Search"
          eventPropName="onClick"
          extractEventArgsToForward={null}
        >
          <ForwardRef
            to="/literature?q=refersto:recid:12345"
          >
            <IconText
              icon={<ForwardRef(LoginOutlined) />}
              text="0 citations"
            />
          </ForwardRef>
        </EventTracker>
      </ListItemAction>
    </React.Fragment>
  }
>
  <div
    className="flex flex-nowrap"
  >
    <div
      className="flex-grow-1"
    >
      <Link
        className="f5"
        to="/literature/12345"
      >
        <LiteratureTitle
          title={
            Immutable.Map {
              "title": "test",
            }
          }
        />
      </Link>
    </div>
    <ResponsiveView
      min="sm"
      render={[Function]}
    />
  </div>
  <div
    className="mt1"
  >
    <AuthorsAndCollaborations
      authors={Immutable.List []}
      collaborations={Immutable.List []}
      collaborationsWithSuffix={Immutable.List []}
      enableAuthorsShowAll={false}
    />
  </div>
  <div
    className="mt1"
  >
    <InlineUL
      separator=" • "
      wrapperClassName={null}
    />
  </div>
</ResultItem>
`;

exports[`LiteratureItem renders 0 citations if it does not exist 1`] = `
<ResultItem
  leftActions={
    <React.Fragment>
      <Connect(CiteModalAction)
        recordId={12345}
      />
    </React.Fragment>
  }
  rightActions={
    <React.Fragment>
      <ListItemAction>
        <EventTracker
          eventId="Citations:Search"
          eventPropName="onClick"
          extractEventArgsToForward={null}
        >
          <ForwardRef
            to="/literature?q=refersto:recid:12345"
          >
            <IconText
              icon={<ForwardRef(LoginOutlined) />}
              text="0 citations"
            />
          </ForwardRef>
        </EventTracker>
      </ListItemAction>
    </React.Fragment>
  }
>
  <div
    className="flex flex-nowrap"
  >
    <div
      className="flex-grow-1"
    >
      <Link
        className="f5"
        to="/literature/12345"
      >
        <LiteratureTitle
          title={
            Immutable.Map {
              "title": "test",
            }
          }
        />
      </Link>
    </div>
    <ResponsiveView
      min="sm"
      render={[Function]}
    />
  </div>
  <div
    className="mt1"
  >
    <AuthorsAndCollaborations
      authors={Immutable.List []}
      collaborations={Immutable.List []}
      collaborationsWithSuffix={Immutable.List []}
      enableAuthorsShowAll={false}
    />
  </div>
  <div
    className="mt1"
  >
    <InlineUL
      separator=" • "
      wrapperClassName={null}
    />
  </div>
</ResultItem>
`;

exports[`LiteratureItem renders with all props set, including sub props 1`] = `
<ResultItem
  leftActions={
    <React.Fragment>
      <UrlsAction
        icon={<ForwardRef(FilePdfOutlined) />}
        iconText="pdf"
        trackerEventId="PdfDownload"
        urls={
          Immutable.List [
            Immutable.Map {
              "value": "https://fulltext.cern/pdf/1",
            },
          ]
        }
      />
      <Connect(CiteModalAction)
        recordId={12345}
      />
    </React.Fragment>
  }
  rightActions={
    <React.Fragment>
      <ListItemAction>
        <EventTracker
          eventId="Citations:Search"
          eventPropName="onClick"
          extractEventArgsToForward={null}
        >
          <ForwardRef
            to="/literature?q=refersto:recid:12345"
          >
            <IconText
              icon={<ForwardRef(LoginOutlined) />}
              text="1 citation"
            />
          </ForwardRef>
        </EventTracker>
      </ListItemAction>
    </React.Fragment>
  }
>
  <div
    className="flex flex-nowrap"
  >
    <div
      className="flex-grow-1"
    >
      <Link
        className="f5"
        to="/literature/12345"
      >
        <LiteratureTitle
          title={
            Immutable.Map {
              "title": "test",
            }
          }
        />
      </Link>
    </div>
    <ResponsiveView
      min="sm"
      render={[Function]}
    />
  </div>
  <div
    className="mt1"
  >
    <AuthorsAndCollaborations
      authors={
        Immutable.List [
          Immutable.Map {
            "full_name": "Test, Author",
          },
        ]
      }
      collaborations={
        Immutable.List [
          Immutable.Map {
            "value": "CMS",
          },
        ]
      }
      collaborationsWithSuffix={
        Immutable.List [
          Immutable.Map {
            "value": "CMS Group",
          },
        ]
      }
      enableAuthorsShowAll={false}
    />
     (
    <LiteratureDate
      date="Jun 7, 1993"
    />
    )
  </div>
  <div
    className="mt1"
  >
    <InlineUL
      separator=" • "
      wrapperClassName={null}
    >
      <PublicationInfoList
        labeled={true}
        publicationInfo={
          Immutable.List [
            Immutable.Map {
              "journal_title": "Test Jornal",
            },
          ]
        }
      />
      <ConferenceInfoList
        conferenceInfo={
          Immutable.List [
            Immutable.Map {
              "acronyms": Immutable.List [
                "MG15",
                "SAP16",
              ],
              "titles": Immutable.List [
                Immutable.Map {
                  "title": "15th Marcel Grossmann Meeting on Recent Developments in Theoretical and Experimental General Relativity, Astrophysics, and Relativistic Field Theories",
                },
              ],
            },
          ]
        }
        wrapperClassName={null}
      />
      <ArxivEprintList
        eprints={
          Immutable.List [
            Immutable.Map {
              "value": "1234567890",
            },
          ]
        }
      />
    </InlineUL>
  </div>
</ResultItem>
`;
