// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferenceItem does not render misc if title present 1`] = `
<ForwardRef(InternalItem)>
  <Row
    align="middle"
    className="w-100 sm-plus-flex-nowrap"
    gutter={24}
    justify="start"
    type="flex"
  >
    <Col
      className="xs-sm-col-24"
    />
    <Col
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Meta
        description={
          <React.Fragment>
            <AuthorsAndCollaborations
              authors={Immutable.List []}
              collaborations={Immutable.List []}
              collaborationsWithSuffix={Immutable.List []}
              enableAuthorsShowAll={false}
            />
            <InlineUL
              separator=" • "
              wrapperClassName="secondary-container"
            />
          </React.Fragment>
        }
        title={
          <div
            className="f5"
          >
            <LiteratureTitle
              title={
                Immutable.Map {
                  "title": "Title",
                }
              }
            />
          </div>
        }
      />
    </Col>
  </Row>
</ForwardRef(InternalItem)>
`;

exports[`ReferenceItem renders misc if present 1`] = `
<ForwardRef(InternalItem)>
  <Row
    align="middle"
    className="w-100 sm-plus-flex-nowrap"
    gutter={24}
    justify="start"
    type="flex"
  >
    <Col
      className="xs-sm-col-24"
    />
    <Col
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Meta
        description={
          <React.Fragment>
            <div>
              A Misc
            </div>
            <AuthorsAndCollaborations
              authors={Immutable.List []}
              collaborations={Immutable.List []}
              collaborationsWithSuffix={Immutable.List []}
              enableAuthorsShowAll={false}
            />
            <InlineUL
              separator=" • "
              wrapperClassName="secondary-container"
            />
          </React.Fragment>
        }
        title={null}
      />
    </Col>
  </Row>
</ForwardRef(InternalItem)>
`;

exports[`ReferenceItem renders unlinked reference (no control_number) 1`] = `
<ForwardRef(InternalItem)>
  <Row
    align="middle"
    className="w-100 sm-plus-flex-nowrap"
    gutter={24}
    justify="start"
    type="flex"
  >
    <Col
      className="xs-sm-col-24"
    />
    <Col
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Meta
        description={
          <React.Fragment>
            <AuthorsAndCollaborations
              authors={
                Immutable.List [
                  Immutable.Map {
                    "full_name": "Author",
                  },
                ]
              }
              collaborations={
                Immutable.List [
                  Immutable.Map {
                    "value": "Test Collab.",
                  },
                ]
              }
              collaborationsWithSuffix={
                Immutable.List [
                  Immutable.Map {
                    "value": "Test Group",
                  },
                ]
              }
              enableAuthorsShowAll={false}
            />
            <InlineUL
              separator=" • "
              wrapperClassName="secondary-container"
            >
              <PublicationInfoList
                labeled={false}
                publicationInfo={
                  Immutable.List [
                    Immutable.Map {
                      "journal_title": "Journal",
                    },
                  ]
                }
              />
              <DOIList
                dois={
                  Immutable.List [
                    Immutable.Map {
                      "value": "123456.12345",
                    },
                  ]
                }
              />
              <URLList
                urls={
                  Immutable.List [
                    Immutable.Map {
                      "value": "https://dude.guy",
                    },
                  ]
                }
                wrapperClassName={null}
              />
            </InlineUL>
          </React.Fragment>
        }
        title={
          <div
            className="f5"
          >
            <LiteratureTitle
              title={
                Immutable.Map {
                  "title": "Title",
                }
              }
            />
          </div>
        }
      />
    </Col>
  </Row>
</ForwardRef(InternalItem)>
`;

exports[`ReferenceItem renders with full reference 1`] = `
<ForwardRef(InternalItem)>
  <Row
    align="middle"
    className="w-100 sm-plus-flex-nowrap"
    gutter={24}
    justify="start"
    type="flex"
  >
    <Col
      className="xs-sm-col-24"
    >
      <span>
        [
        123
        ]
      </span>
    </Col>
    <Col
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Meta
        description={
          <React.Fragment>
            <AuthorsAndCollaborations
              authors={
                Immutable.List [
                  Immutable.Map {
                    "full_name": "Author",
                  },
                ]
              }
              collaborations={
                Immutable.List [
                  Immutable.Map {
                    "value": "Test Collab.",
                  },
                ]
              }
              collaborationsWithSuffix={
                Immutable.List [
                  Immutable.Map {
                    "value": "Test Group",
                  },
                ]
              }
              enableAuthorsShowAll={false}
            />
            <InlineUL
              separator=" • "
              wrapperClassName="secondary-container"
            >
              <PublicationInfoList
                labeled={false}
                publicationInfo={
                  Immutable.List [
                    Immutable.Map {
                      "journal_title": "Journal",
                    },
                  ]
                }
              />
              <DOIList
                dois={
                  Immutable.List [
                    Immutable.Map {
                      "value": "123456.12345",
                    },
                  ]
                }
              />
            </InlineUL>
          </React.Fragment>
        }
        title={
          <ForwardRef
            className="f5"
            to="/literature/12345"
          >
            <LiteratureTitle
              title={
                Immutable.Map {
                  "title": "Title",
                }
              }
            />
          </ForwardRef>
        }
      />
    </Col>
  </Row>
</ForwardRef(InternalItem)>
`;
