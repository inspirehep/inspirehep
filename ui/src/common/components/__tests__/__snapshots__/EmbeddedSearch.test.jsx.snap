// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmbeddedSearch renders error if facets request fails with custom error 1`] = `
<span>
  Error
</span>
`;

exports[`EmbeddedSearch renders error if results request fails 1`] = `""`;

exports[`EmbeddedSearch renders with current results if baseQuery is changed but equals to previous one 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 1,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with initial search results when base query props are set 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 1,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with loading state true then initial search results 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={true}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={0}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={Immutable.List []}
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={0}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with loading state true then initial search results 2`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 1,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with new results after aggregation change 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 2,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with new results after baseQuery prop change 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 2,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with new results after page change 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 2,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={2}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with new results after pidType prop change 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostrecent"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 2,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;

exports[`EmbeddedSearch renders with new results after sort change 1`] = `
<Row
  gutter={
    Object {
      "lg": 32,
      "xs": 0,
    }
  }
  justify="start"
  type="flex"
>
  <ResponsiveView
    min="lg"
    render={[Function]}
  />
  <ResponsiveView
    max="md"
    render={[Function]}
  />
  <Col
    lg={17}
    xs={24}
  >
    <LoadingOrChildren
      loading={false}
    >
      <Row
        align="middle"
        gutter={0}
        justify="space-between"
        type="flex"
      >
        <Col
          md={12}
          xs={24}
        >
          <NumberOfResults
            numberOfResults={1}
          />
        </Col>
        <Col>
          <SortBy
            onSortChange={[Function]}
            sort="mostcited"
          />
        </Col>
      </Row>
      <Row
        gutter={0}
      >
        <Col
          span={24}
        >
          <SearchResults
            renderItem={[MockFunction]}
            results={
              Immutable.List [
                Immutable.Map {
                  "id": 2,
                },
              ]
            }
          />
          <SearchPagination
            onPageChange={[Function]}
            page={1}
            pageSize={10}
            total={1}
          />
        </Col>
      </Row>
    </LoadingOrChildren>
  </Col>
</Row>
`;
