// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorsAndCollaborations does not render bullet if authors missing 1`] = `
<Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          "value": "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          "value": "Test 1 Group",
        },
        Immutable.Map {
          "value": "Test 2 Group",
        },
      ]
    }
  />
  <AuthorList
    authors={Immutable.List []}
    enableShowAll={false}
    limit={1}
    total={-1}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations does not render bullet if authors missing with single collaboration 1`] = `
<Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          "value": "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={Immutable.List []}
  />
  <AuthorList
    authors={Immutable.List []}
    enableShowAll={false}
    limit={1}
    total={-1}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations renders collaboration list and author list if collaborations and authors have multiple items 1`] = `
<Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          "value": "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          "value": "Test 1 Group",
        },
        Immutable.Map {
          "value": "Test 2 Group",
        },
      ]
    }
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
        Immutable.Map {
          "full_name": "Test, Guy 2",
        },
      ]
    }
    enableShowAll={true}
    limit={1}
    total={12}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations renders collaboration list with single item and author list with limit 1 if there are multiple authors 1`] = `
<Fragment>
  <CollaborationList
    collaborations={Immutable.List []}
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          "value": "Test 1 Group",
        },
      ]
    }
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
        Immutable.Map {
          "full_name": "Test, Guy 2",
        },
      ]
    }
    enableShowAll={true}
    limit={1}
    total={12}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations renders multiple collaborations and author for the collaborations 1`] = `
<Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          "value": "Test Collab 1",
        },
        Immutable.Map {
          "value": "Test Collab 2",
        },
      ]
    }
    collaborationsWithSuffix={Immutable.List []}
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
      ]
    }
    enableShowAll={true}
    limit={5}
    total={1}
    wrapperClassName="di"
  />
  <span>
     for the collaboration
  </span>
  <span>
    s
  </span>
  <span>
    .
  </span>
</Fragment>
`;

exports[`AuthorsAndCollaborations renders only author list if collaborations are missing (default author props) 1`] = `
<Fragment>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
      ]
    }
    enableShowAll={false}
    limit={5}
    total={-1}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations renders only author list if collaborations are missing (extra author props) 1`] = `
<Fragment>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
      ]
    }
    enableShowAll={true}
    limit={5}
    total={1}
    wrapperClassName="di"
  />
</Fragment>
`;

exports[`AuthorsAndCollaborations renders only one collaboration and author for the collaboration 1`] = `
<Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          "value": "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={Immutable.List []}
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          "full_name": "Test, Guy 1",
        },
      ]
    }
    enableShowAll={true}
    limit={5}
    total={1}
    wrapperClassName="di"
  />
  <span>
     for the collaboration
  </span>
  <span>
    .
  </span>
</Fragment>
`;
