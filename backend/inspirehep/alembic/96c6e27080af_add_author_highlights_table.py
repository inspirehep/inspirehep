#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""add author_highlights table"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy_utils.types import UUIDType

# revision identifiers, used by Alembic.
revision = "96c6e27080af"
down_revision = "232af38d2604"
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author_highlights",
        sa.Column("author_id", UUIDType, nullable=False),
        sa.Column("literature_id", UUIDType, nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["records_metadata.id"],
            name="fk_author_highlights_author_id",
        ),
        sa.ForeignKeyConstraint(
            ["literature_id"],
            ["records_metadata.id"],
            name="fk_author_highlights_literature_id",
        ),
        sa.PrimaryKeyConstraint(
            "author_id", "literature_id", name=op.f("pk_author_highlights")
        ),
    )
    op.create_index(
        "ix_author_highlights_author_id",
        "author_highlights",
        ["author_id"],
        unique=False,
    )
    op.drop_table("userprofiles_userprofile")
    op.drop_index("idx_pidstore_pid_pid_value", table_name="pidstore_pid")
    op.drop_index("ix_records_authors_id_type_record_id", table_name="records_authors")
    op.alter_column(
        "records_citations",
        "is_self_citation",
        existing_type=sa.BOOLEAN(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "records_citations",
        "is_self_citation",
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.create_index(
        "ix_records_authors_id_type_record_id",
        "records_authors",
        ["id_type", "record_id"],
        unique=False,
    )
    op.create_index(
        "idx_pidstore_pid_pid_value", "pidstore_pid", ["pid_value"], unique=False
    )
    op.create_table(
        "userprofiles_userprofile",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "displayname", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "full_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["accounts_user.id"],
            name="fk_userprofiles_userprofile_user_id_accounts_user",
        ),
        sa.PrimaryKeyConstraint("user_id", name="pk_userprofiles_userprofile"),
        sa.UniqueConstraint("username", name="uq_userprofiles_userprofile_username"),
    )
    op.drop_index("ix_author_highlights_author_id", table_name="author_highlights")
    op.drop_table("author_highlights")
    # ### end Alembic commands ###
