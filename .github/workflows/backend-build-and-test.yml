name: Backend build and test

on:
  push:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-build-and-test.yml'
  pull_request:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-build-and-test.yml'

env:
  IMAGE_FILE: inspirehep-hep.tar

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache image
        uses: actions/cache@v2
        env:
          cache-name: docker-images
        with:
          path: ${{ env.IMAGE_FILE }}
          key: inspirehep-hep-${{ hashFiles('backend/poetry.lock') }}-${{ github.sha }}
          restore-keys: |
            inspirehep-hep-${{ hashFiles('backend/poetry.lock') }}-
            inspirehep-hep-

      - name: Build image
        env:
          TAG: inspirehep/hep:${{ github.sha }}
          DEPS_TAG: inspirehep/hep:deps-${{ hashFiles('backend/poetry.lock') }}
        run: |
          if [ -f $IMAGE_FILE ]; then
            docker load --input $IMAGE_FILE
            docker build -t $TAG -t $DEPS_TAG --cache-from $DEPS_TAG backend/
          else
            docker build -t $TAG -t $DEPS_TAG backend/
          fi
          docker save -o $IMAGE_FILE $TAG $DEPS_TAG

  Integration:
    runs-on: ubuntu-latest
    needs: Build
    strategy:
      fail-fast: false
      matrix:
        suite: [integration-async, integration]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
        ports:
        - 5432:5432
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Retrieve cached image
        uses: actions/cache@v2
        env:
          cache-name: docker-images
        with:
          path: ${{ env.IMAGE_FILE }}
          key: inspirehep-hep-${{ hashFiles('backend/poetry.lock') }}-${{ github.sha }}

      - name: Load and test
        env:
          TAG: inspirehep/hep:${{ github.sha }}
        run: |
          docker load --input $IMAGE_FILE
          docker run --entrypoint poetry --network="host" $TAG run py.test tests/${{ matrix.suite }}

  Unit:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Retrieve cached image
        uses: actions/cache@v2
        env:
          cache-name: docker-images
        with:
          path: ${{ env.IMAGE_FILE }}
          key: inspirehep-hep-${{ hashFiles('backend/poetry.lock') }}-${{ github.sha }}

      - name: Load and test
        env:
          TAG: inspirehep/hep:${{ github.sha }}
        run: |
          docker load --input $IMAGE_FILE
          docker run --entrypoint poetry --network="host" $TAG run py.test tests/unit
