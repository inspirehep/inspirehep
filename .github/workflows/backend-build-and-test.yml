name: Backend build and test

on:
  push:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-build-and-test.yml'
  pull_request_target:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-build-and-test.yml'

env:
  IMAGE: inspirehep/hep
  TAG: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.TAG }}

      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        env:
          DEPS_TAG: deps-${{ hashFiles('backend/poetry.lock') }}
        run: |
          docker pull $IMAGE:$DEPS_TAG || :
          docker build -t $IMAGE:$TAG -t $IMAGE:$DEPS_TAG --cache-from $IMAGE:$DEPS_TAG backend/

      - name: Push
        env:
          DEPS_TAG: deps-${{ hashFiles('backend/poetry.lock') }}
        run: |
          docker push $IMAGE:$TAG
          docker push $IMAGE:$DEPS_TAG

  Integration:
    runs-on: ubuntu-latest
    needs: Build
    strategy:
      fail-fast: false
      matrix:
        suite: [integration-async, integration]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
        ports:
        - 5432:5432
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: test
        run: >
          docker run
          --entrypoint poetry
          --network="host"
          $IMAGE:$TAG
          run py.test tests/${{ matrix.suite }}

  Unit:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: test
        run: >
          docker run
          --entrypoint poetry
          --network="host"
          $IMAGE:$TAG
          run py.test tests/unit

  Push:
    runs-on: ubuntu-latest
    needs:
      - Unit
      - Integration
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull, tag and push
        id: push
        run: |
          export GIT_DESC=$(git describe --always --tags)
          docker pull $IMAGE:$TAG
          docker tag $IMAGE:$TAG $IMAGE:$GIT_DESC
          docker push $IMAGE:$GIT_DESC
          echo "::set-output name=git_desc::$GIT_DESC"

      - name: QA
        uses: peter-evans/repository-dispatch@v1
        if: ${{ success() }}
        with:
          repository: inspirehep/kubernetes
          token: ${{ secrets.INSPIRE_BOT_TOKEN }}
          event-type: deploy
          client-payload: >
            {"environment": "qa",
             "image": "$IMAGE",
             "tag": "${{ steps.push.outputs.git_desc }}"}
