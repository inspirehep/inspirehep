version: "3"

volumes:
  backoffice_postgres_data: {}
  backoffice_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backoffice_local_django
    container_name: backoffice_local_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/local/.django
      - ./.envs/local/.postgres
    ports:
      - "8000:8000"
    command: sh -c 'poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000'
    networks:
      - djangonetwork

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backoffice_production_postgres
    container_name: backoffice_local_postgres
    ports:
      - "5432:5432"
    volumes:
      - backoffice_postgres_data:/var/lib/postgresql/data
      - backoffice_postgres_data_backups:/backups
    env_file:
      - ./.envs/local/.postgres
    networks:
      - djangonetwork

  redis:
    image: redis:6
    container_name: backoffice_local_redis
    networks:
      - djangonetwork

  celeryworker:
    <<: *django
    image: backoffice_local_celeryworker
    container_name: backoffice_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: celery -A config.celery_app worker -l INFO
    networks:
      - djangonetwork

  celerybeat:
    <<: *django
    image: backoffice_local_celerybeat
    container_name: backoffice_local_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: celery -A config.celery_app beat -l INFO
    networks:
      - djangonetwork

  mq:
    image: rabbitmq:3.9.11-management
    restart: "always"
    container_name: backoffice_local_mq
    ports:
      - "5672:5672"
    networks:
      - djangonetwork

  opensearch:
    container_name: backoffice_local_opensearch
    build:
      context: .
      dockerfile: ./compose/local/opensearch/Dockerfile
    restart: "always"
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    ports:
      - 9200:9200
      - 9300:9300
      - 9600:9600 # performance analysis
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge
