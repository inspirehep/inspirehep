# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["backoffice/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = [
    "backoffice",
    "config",
]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
    "pylint_celery",
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.poetry]
name = "backoffice"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "~3.11"
python-slugify = "8.0.1"
Pillow = "10.0.1"
argon2-cffi = "23.1.0"
redis = "5.0.1"
hiredis = "2.2.3"
celery = "5.3.4"
django-celery-beat = "2.5.0"
flower = "2.0.1"
uvicorn = {version = "0.23.2", extras = ["standard"]}
django = "4.2.6"
django-environ = "0.11.2"
django-model-utils = "4.3.1"
django-allauth = "0.57.0"
django-crispy-forms = "2.1"
crispy-bootstrap5 = "0.7"
django-redis = "5.4.0"
djangorestframework = "3.14.0"
django-cors-headers = "4.2.0"
drf-spectacular = "0.26.5"
Werkzeug = {version = "3.0.0", extras = ["watchdog"]}
ipdb = "0.13.13"
psycopg = {version = "3.1.12", extras = ["c"]}
watchfiles = "0.20.0"
gunicorn = "21.2.0"
Collectfast = "2.2.0"
sentry-sdk = "1.31.0"
django-storages = {version = "1.14.2", extras = ["s3"]}
django-anymail = "10.1"

[tool.poetry.dev-dependencies]
factory-boy = "3.3.0"
mypy = "1.5.1"
django-stubs = {version = "4.2.4", extras = ["compatible-mypy"]}
pytest = "7.4.2"
pytest-sugar = "0.9.7"
djangorestframework-stubs = {version = "3.14.3", extras = ["compatible-mypy"]}
flake8 = "6.1.0"
flake8-isort = "6.1.0"
coverage = "7.3.2"
black = "23.10.0"
djlint = "1.34.0"
pylint-django = "2.5.3"
pylint-celery = "0.3"
pre-commit = "3.5.0"
django-debug-toolbar = "4.2.0"
django-extensions = "3.2.3"
django-coverage-plugin = "3.1.0"
pytest-django = "4.5.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
